# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply surround
# them with ${}. For strings the variable must be within quotes (ie, "${STR_VAR}"),
# for numbers and booleans they should be plain (ie, ${INT_VAR}, ${BOOL_VAR})


# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"
# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "10s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true
  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000
  ## Maximum number of unwritten metrics per output.  Increasing this value
  ## allows for longer periods of output downtime without dropping metrics at the
  ## cost of higher maximum memory usage.
  metric_buffer_limit = 10000
  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"
  ## Default flushing interval for all outputs. Maximum flush_interval will be
  ## flush_interval + flush_jitter
  flush_interval = "10s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"
  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s.
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""
  ## Log at debug level.
  debug = false
  ## Name of the file to be logged to when using the "file" logtarget.  If set to
  ## the empty string then logs are written to stderr.
  logfile = "/var/log/telegraf/telegraf.log"
  ## The logfile will be rotated after the time interval specified.  When set
  ## to 0 no time based rotation is performed.  Logs are rotated only when
  ## written to, if there is no log activity rotation may be delayed.
  # logfile_rotation_interval = "0d"
  ## The logfile will be rotated when it becomes larger than the specified
  ## size.  When set to 0 no size based rotation is performed.
  # logfile_rotation_max_size = "0MB"
  ## Maximum number of rotated archives to keep, any older logs are deleted.
  ## If set to -1, no archives are removed.
  # logfile_rotation_max_archives = 5
  ## Pick a timezone to use when logging or type 'local' for local time.
  ## Example: America/Chicago
  # log_with_timezone = ""
  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do not set the "host" tag in the telegraf agent.
  omit_hostname = false
  
###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################
# Configuration for sending metrics to InfluxDB 1.8.x (deprecated)
#[[outputs.influxdb]]
  ## The full HTTP or UDP URL for your InfluxDB instance.
  #urls = ["http://127.0.0.1:8086"]
  ## The target database for metrics; will be created as needed.
  ## For UDP URL endpoint database needs to be configured on the server side.
  #database = "nasuni"
  ## Timeout for HTTP messages.
  #timeout = "10s"

# Configuration for sending metrics to InfluxDB 2.7+
[[outputs.influxdb_v2]]
  ## The full HTTP or UDP URL for your InfluxDB instance.
  urls = ["http://localhost:8086"]
  ## Token for authentication.
  token = "<token>"
  ## Organization is the name of the organization you wish to write to.
  organization = "<myOrg>"
  ## Destination bucket to write into.
  bucket = "<myBucket>"
  
###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################
# Read metrics about cpu usage
[[inputs.cpu]]
  ## Whether to report per-cpu stats or not
  percpu = true
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics
  collect_cpu_time = false
  ## If true, compute and report the sum of all non-idle CPU states
  report_active = false
# Read metrics about disk usage by mount point
[[inputs.disk]]
  ## By default stats will be gathered for all mount points.
  ## Ignore mount points by filesystem type.
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
  
###############################################################################
#                 GFA Telemetry HTTP API Input Plugin                         #
###############################################################################
# Read formatted metrics from one or more HTTP endpoints
[[inputs.http]]
#    urls = [ "https://gfa-telemetry-1.api.nasuni.com/v1/data" ] 
#    headers = { "Authorization" = "GFA API Key" }
#    headers = { "X-Nasuni-client-key" = "GFA Client Identifier String" }
  interval = "60s"
  data_format = "json_v2"
[[inputs.http.json_v2]]
  measurement_name = "gfa_data"
# Volume Metrics
[[inputs.http.json_v2.object]]
  path = "metrics.volumes"
  excluded_keys = ["version","metric_type"]
  tags = ["volume_guid","volume_title"]
  timestamp_key = "timestamp"
  timestamp_format = "2006-01-02T15:04:05Z"
# Filer Metrics
[[inputs.http.json_v2.object]]
  path = "metrics.filers"
  excluded_keys = ["version","metric_type"]
  tags = ["volume_guid","volume_title","filer_guid","filer_title"]
  timestamp_key = "timestamp"
 timestamp_format = "2006-01-02T15:04:05Z"
# Propagation Metrics
[[inputs.http.json_v2.object]]
  path = "metrics.propagation"
  excluded_keys = ["version","metric_type","kind"]
  tags = ["volume_guid","volume_title","filer_guid","filer_title"]
  timestamp_key = "timestamp"
  timestamp_format = "2006-01-02T15:04:05Z"
# Lock Metrics
[[inputs.http.json_v2.object]]
  path = "metrics.locks"
  excluded_keys = ["version","metric_type"]
  tags = ["volume_guid","volume_title","filer_guid","filer_title"]
  timestamp_key = "timestamp"
  timestamp_format = "2006-01-02T15:04:05Z"
       
###############################################################################
#                    Nasuni Appliance SNMP Input Plugin                       #
###############################################################################
       
# Retrieves SNMP values from remote agents
[[inputs.snmp]]
    agents = [
         "edge1.yourdomain.com",
         "edge2.yourdomain.com",
	 "edge3.yourdomain.com"
    ]
    retries = 3
    ## SNMP version; can be 1, 2, or 3.
    version = 3
    ## SNMP community string.
    # community = "public"
    # name is used for grouping tables -- do not edit
    name = "Nasuni"
    ##
    ## SNMPv3 authentication and encryption options.
    ##
    ## Security Name
    sec_name = "<username>"
    auth_protocol = "SHA"      # Values: "MD5", "SHA", ""
    ## Authentication password.
    auth_password = "<password>"
    sec_level = "authNoPriv"   # Values: "noAuthNoPriv", "authNoPriv", "authPriv"
[inputs.snmp.tags]
	customer = "<CustomerName>"
	# Two character country code
	country = "<CountryCode>"
	
###############################################################################
#        Nasuni Appliance SNMP Field Definitions - Do Not Edit                #
###############################################################################
	
### Filer SNMP inputs
[[inputs.snmp.field]]
	name = "hostname"
	oid = ".1.3.6.1.2.1.1.1.0"
	is_tag = true
[[inputs.snmp.field]]
	name = "filer_location"
	oid = ".1.3.6.1.2.1.1.6.0"
	is_tag = true
[[inputs.snmp.field]]
	name = "filer_city"
	oid = ".1.3.6.1.2.1.1.6.0"
[[inputs.snmp.field]]
	name = "filer_platform_name"
	oid = ".1.3.6.1.4.1.42040.1.101.1.0"
[[inputs.snmp.field]]
	name = "filer_version"
	oid = ".1.3.6.1.4.1.42040.1.2.0"
[[inputs.snmp.field]]
	name = "filer_device_cache"
	oid = ".1.3.6.1.4.1.42040.1.100.12.0"
[[inputs.snmp.field]]
	name = "filer_device_var"
	oid = ".1.3.6.1.4.1.42040.1.100.13.0"
[[inputs.snmp.field]]
	name = "filer_device_root"
	oid = ".1.3.6.1.4.1.42040.1.100.14.0"
[[inputs.snmp.field]]
	name = "filer_device_nasuni"
	oid = ".1.3.6.1.4.1.42040.1.100.15.0"
[[inputs.snmp.field]]
	name = "filer_read_hits"
	oid = ".1.3.6.1.4.1.42040.1.13.0"
[[inputs.snmp.field]]
	name = "filer_read_misses"
	oid = ".1.3.6.1.4.1.42040.1.14.0"
# [[inputs.snmp.field]]
	# name = "filer_opens_read"
	# oid = ".1.3.6.1.4.1.42040.1.10.0"
# [[inputs.snmp.field]]
	# name = "filer_opens_write"
	# oid = ".1.3.6.1.4.1.42040.1.11.0"
[[inputs.snmp.field]]
	name = "filer_total_share_clients"
	oid = ".1.3.6.1.4.1.42040.1.103.3.0"
[[inputs.snmp.field]]
	name = "filer_total_share_locks"
	oid = ".1.3.6.1.4.1.42040.1.103.2.0"
# [[inputs.snmp.field]]
	# name = "filer_total_rsb_enabled"
	# oid = ".1.3.6.1.4.1.42040.1.107.1.0"
# [[inputs.snmp.field]]
	# name = "filer_total_rsb_connected"
	# oid = ".1.3.6.1.4.1.42040.1.107.2.0"
[[inputs.snmp.field]]
	name = "filer_total_shares"
	oid = ".1.3.6.1.4.1.42040.1.103.1.0"
[[inputs.snmp.field]]
	name = "filer_total_unprotected_data"
	oid = ".1.3.6.1.4.1.42040.1.6.0"
[[inputs.snmp.field]]
	name = "filer_online"
	oid = ".1.3.6.1.2.1.25.1.1.0"
# [[inputs.snmp.field]]
	# name = "filer_inlet_temp"
	# oid = ".1.3.6.1.4.1.42040.1.102.2.0"
# [[inputs.snmp.field]]
	# name = "filer_exhaust_temp"
	# oid = ".1.3.6.1.4.1.42040.1.102.3.0"
[[inputs.snmp.field]]
	name = "nasuni_account_license_capacity"
	oid = ".1.3.6.1.4.1.42040.3.1.0"
# [[inputs.snmp.field]]
	# name = "nasuni_account_info_license_used"
	# oid = ".1.3.6.1.4.1.42040.3.2.0"
[[inputs.snmp.field]]
	name = "nasuni_account_used_percentage"
	oid = ".1.3.6.1.4.1.42040.3.3.0"	
### Filer Network
[[inputs.snmp.field]]
	name = "filer_nw_clients_in"
	oid = ".1.3.6.1.4.1.42040.1.108.8.0"
[[inputs.snmp.field]]
	name = "filer_nw_clients_out"
	oid = ".1.3.6.1.4.1.42040.1.108.7.0"
[[inputs.snmp.field]]
	name = "filer_nw_cloud_in"
	oid = ".1.3.6.1.4.1.42040.1.108.2.0"
[[inputs.snmp.field]]
	name = "filer_nw_cloud_out"
	oid = ".1.3.6.1.4.1.42040.1.108.1.0"
# [[inputs.snmp.field]]
	# name = "filer_nw_mobile_in"
	# oid = ".1.3.6.1.4.1.42040.1.108.4.0"
# [[inputs.snmp.field]]
	# name = "filer_nw_mobile_out"
	# oid = ".1.3.6.1.4.1.42040.1.108.3.0"
# [[inputs.snmp.field]]
	# name = "filer_nw_ui_in"
	# oid = ".1.3.6.1.4.1.42040.1.108.6.0"
# [[inputs.snmp.field]]
	# name = "filer_nw_ui_out"
	# oid = ".1.3.6.1.4.1.42040.1.108.5.0"
# [[inputs.snmp.field]]
	# name = "filer_nw_migration_in"
	# oid = ".1.3.6.1.4.1.42040.1.108.10.0"
# [[inputs.snmp.field]]
	# name = "filer_nw_migration_out"
	# oid = ".1.3.6.1.4.1.42040.1.108.9.0"
### Memory
[[inputs.snmp.field]]
	name = "mem_total_real"
	oid = ".1.3.6.1.4.1.2021.4.5.0"
[[inputs.snmp.field]]
	name = "mem_avail_real"
	oid = ".1.3.6.1.4.1.2021.4.6.0"
[[inputs.snmp.field]]
	name = "mem_free"
	oid = ".1.3.6.1.4.1.2021.4.11.0"
[[inputs.snmp.field]]
	name = "mem_shared"
	oid = ".1.3.6.1.4.1.2021.4.13.0"
[[inputs.snmp.field]]
	name = "mem_buffer"
	oid = ".1.3.6.1.4.1.2021.4.14.0"
[[inputs.snmp.field]]
	name = "mem_cached"
	oid = ".1.3.6.1.4.1.2021.4.15.0"
### Cache
[[inputs.snmp.field]]
	name = "filer_cache_total"
	oid = ".1.3.6.1.4.1.42040.1.100.1.0"
[[inputs.snmp.field]]
	name = "filer_cache_used"
	oid = ".1.3.6.1.4.1.42040.1.100.2.0"
[[inputs.snmp.field]]
	name = "filer_cache_free"
	oid = ".1.3.6.1.4.1.42040.1.100.3.0"
### CPU
[[inputs.snmp.field]]
	name = "cpula1"
	oid = ".1.3.6.1.4.1.2021.10.1.3.1"
	conversion = "float"
[[inputs.snmp.field]]
	name = "cpula5"
	oid = ".1.3.6.1.4.1.2021.10.1.3.2"
	conversion = "float"
[[inputs.snmp.field]]
	name = "cpula15"
	oid = ".1.3.6.1.4.1.2021.10.1.3.3"
	conversion = "float"
[[inputs.snmp.field]]
	name = "cpu_idle"
	oid = ".1.3.6.1.4.1.2021.11.11.0"
### Disk
[[inputs.snmp.table]]
	name = "nasuni_disk"
	inherit_tags = ["hostname"]
[[inputs.snmp.table.field]]
	name = "diskiodevice"
	oid = ".1.3.6.1.4.1.2021.13.15.1.1.2"
	is_tag = true
[[inputs.snmp.table.field]]
	name = "diskiola1"
	oid = ".1.3.6.1.4.1.2021.13.15.1.1.9"
[[inputs.snmp.table.field]]
	name = "diskiola5"
	oid = ".1.3.6.1.4.1.2021.13.15.1.1.10"
[[inputs.snmp.table.field]]
	name = "diskiola15"
	oid = ".1.3.6.1.4.1.2021.13.15.1.1.11"
[[inputs.snmp.table.field]]
	name = "diskioreads"
	oid = ".1.3.6.1.4.1.2021.13.15.1.1.5"
[[inputs.snmp.table.field]]
	name = "diskiowrites"
	oid = ".1.3.6.1.4.1.2021.13.15.1.1.6"
# [[inputs.snmp.table.field]]
	# name = "diskionreadx"
	# oid = ".1.3.6.1.4.1.2021.13.15.1.1.12"
# [[inputs.snmp.table.field]]
	# name = "diskionwrittenx"
	# oid = ".1.3.6.1.4.1.2021.13.15.1.1.13"
### Volumes
# [[inputs.snmp.table]]
    # name = "nasuni_vol"
    # inherit_tags = ["hostname"]
# [[inputs.snmp.table.field]]
    # name = "vol_name"
    # oid = ".1.3.6.1.4.1.42040.2.2.1.2"
    # is_tag = true
# [[inputs.snmp.table.field]]
	# name = "vol_accessible_data"
	# oid = ".1.3.6.1.4.1.42040.2.2.1.6"
# [[inputs.snmp.table.field]]
	# name = "vol_unprotected_data"
	# oid = ".1.3.6.1.4.1.42040.2.2.1.7"
# [[inputs.snmp.table.field]]
	# name = "vol_is_remote"
	# oid = ".1.3.6.1.4.1.42040.2.2.1.16"
# [[inputs.snmp.table.field]]
	# name = "vol_is_shared"
	# oid = ".1.3.6.1.4.1.42040.2.2.1.13"
# [[inputs.snmp.table.field]]
	# name = "vol_last_snapshot_start"
	# oid = ".1.3.6.1.4.1.42040.2.2.1.8"
# [[inputs.snmp.table.field]]
	# name = "vol_last_snapshot_end"
	# oid = ".1.3.6.1.4.1.42040.2.2.1.9"
# [[inputs.snmp.table.field]]
	# name = "vol_last_snapshot_duration"
	# oid = ".1.3.6.1.4.1.42040.2.2.1.10"
# [[inputs.snmp.table.field]]
	# name = "vol_last_snapshot_version"
	# oid = ".1.3.6.1.4.1.42040.2.2.1.11"
# [[inputs.snmp.table.field]]
	# name = "vol_num_av_violations"
	# oid = ".1.3.6.1.4.1.42040.2.2.1.20"
# [[inputs.snmp.table.field]]
	# name = "vol_count"
	# oid = ".1.3.6.1.4.1.42040.2.1.0"
